name: microservices

services:
  song-service:
    deploy:
      replicas: 2
    env_file:
      - .env
    build: ./song
#    ports:
#      - 8092-8093:8092
    depends_on:
      - db-song
      - eureka
    environment:
      DOCKER_EUREKA: eureka
      DOCKER_DB: song-db
    networks:
      - ls

  resource-service:
    env_file:
      - .env
    build: ./resource
#    ports:
#      - 8095:8091
    depends_on:
      - db-resource
      - eureka
      - rabbitMQ
    environment:
      DOCKER_EUREKA: eureka
      DOCKER_DB: resource-db
    dns:
      - 10.0.2.20
    networks:
      - ls
        
  resource-processor-service:
    env_file:
      - .env
    build: ./resource-processor
    depends_on:
      - eureka
      - rabbitMQ
    environment:
      DOCKER_EUREKA: eureka
    networks:
      - ls
      
  eureka:
    build: ./eureka-server
    ports:
      - 8761:8761
    networks:
      - ls
        
  gateway:
    build: ./gateway
    ports:
      - 8888:8888
    depends_on:
      - eureka
    environment:
      DOCKER_EUREKA: eureka
    networks:
      - ls
  
  db-song:
     hostname: song-db
     image: postgres:16-alpine
     volumes:
       - ./init-scripts/song_db/init.sql:/docker-entrypoint-initdb.d/db.sql
     environment:
       POSTGRES_USER: ${song_db_user}
       POSTGRES_PASSWORD: ${song_db_password}
       POSTGRES_DB: ${song_db_name}
     networks:
       - ls
       
  db-resource:
    hostname: resource-db
    image: postgres:16-alpine
    volumes:
      - ./init-scripts/resource_db/init.sql:/docker-entrypoint-initdb.d/db.sql
    environment:
      POSTGRES_USER: ${resource_db_user}
      POSTGRES_PASSWORD: ${resource_db_password}
      POSTGRES_DB: ${resource_db_name}
    networks:
      - ls
      
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack
    command: bash -c "aws configure && aws --endpoint-url=http://localhost:4566 s3api create-bucket --bucket resources-bucket"
    ports:
      # Now only required if you need to access LocalStack from the host
      - "127.0.0.1:4566:4566"
      # Now only required if you need to access LocalStack from the host
      - "127.0.0.1:4510-4559:4510-4559"
    environment:
      - DEBUG=${DEBUG:-0}
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      ls:
        ipv4_address: 10.0.2.20
  
  rabbitMQ:
    container_name: 'resource-rabbit'
    image: rabbitmq
    command: rabbitmq-server
    hostname: rabbitmq
    environment:
      - 'RABBITMQ_DEFAULT_PASS=secret'
      - 'RABBITMQ_DEFAULT_USER=myuser'
    ports:
        - '5672'
    expose:
      - 5672
      - 15672
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
    networks:
      - ls

networks:
  ls:
    ipam:
      config:
        - subnet: 10.0.2.0/24